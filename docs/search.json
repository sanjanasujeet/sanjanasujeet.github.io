[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Sanjana Sujeet",
    "section": "",
    "text": "Hello!\nMy name is Sanjana Sujeet and I am a 3rd year student at UCSB, welcome to my personal website! Feel free to check out my other pages with my CV, travel tracker, and projects. Also, check out my linked in, github, or contact me at sanjsujeet@gmail.com by just clicking the buttons under my picture!"
  },
  {
    "objectID": "index.html#about",
    "href": "index.html#about",
    "title": "Sanjana Sujeet",
    "section": "About",
    "text": "About\nMy name is Sanjana and I am currently an third year undergrad at UCSB studying Environmental Science and Spatial Science! I am interested in climate change science especially in the marine sphere and data science/visualization. I am passionate about bridging the gap between the science community and the public through data visualization and mapping and removing the barriers of high scientific literacy needed to understand dense material.\nI am originally from Utah and I love traveling, hiking, roadtrips, sunset plunges, thrifting, any form of art but especially oil and charcoal, and grew up learning a classical Indian dance form called Bharatanatyam. I just started scuba diving"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "My name is Sanjana Sujeet, I use she/her pronouns, and I grew up in Utah. I am currently a third-year undergrad at UC Santa Barbara studying Environmental Science and Spatial Science! I am interested in climate change science especially in the marine sphere as well as data science/visualization. I am passionate about bridging the gap between the science community and the public through data visualization, mapping, creative outlets, and removing the barriers of high scientific literacy needed to understand dense material.\nSome things I love are animals, reading, substacks, photography/videography and…"
  },
  {
    "objectID": "about.html#research-experience",
    "href": "about.html#research-experience",
    "title": "Education",
    "section": "Research Experience",
    "text": "Research Experience\n\n\n\nNational Science Foundation (NSF) logo\n\n\nFUERTE Fellowship- funded by National Science Foundation (NSF)\n\n2023 - Present; Santa Barbara, California, United States\n\n\n\n\n3 year Fellowship focusing on research and involvement in Conservation, Environmental Science, and Marine Biology\n\n\nResearch Project on Micro and Macroplastics in the Sierra Nevada Lake Environments- Field work, Synthesis, and Data Analysis using R Studio"
  },
  {
    "objectID": "about.html#my-cv",
    "href": "about.html#my-cv",
    "title": "Education",
    "section": "",
    "text": "&lt;p&gt;This browser does not support PDFs. Please download the file:&lt;/p&gt;\n&lt;p&gt;&lt;a href=\"media/may2025CV.pdf\"&gt;Download PDF&lt;/a&gt;.&lt;/p&gt;\n&lt;iframe&gt;\n&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyLXRpdGxl\"&gt;Education&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXItdGl0bGU=\"&gt;Sanjana Sujeet&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6SG9tZQ==\"&gt;Home&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6L2luZGV4Lmh0bWw=\"&gt;/index.html&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6RWR1Y2F0aW9u\"&gt;Education&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6L2Fib3V0Lmh0bWw=\"&gt;/about.html&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6QXJ0\"&gt;Art&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6L0FydC5odG1s\"&gt;/Art.html&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLW1ldGF0aXRsZQ==\"&gt;Education&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLXR3aXR0ZXJjYXJkdGl0bGU=\"&gt;Education&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLW9nY2FyZHRpdGxl\"&gt;Education&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLXR3aXR0ZXJjYXJkZGVzYw==\"&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLW9nY2FyZGRkZXNj\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/section&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const onCopySuccess = function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  }\n  const getTextToCopy = function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button:not([data-in-quarto-modal])', {\n    text: getTextToCopy\n  });\n  clipboard.on('success', onCopySuccess);\n  if (window.document.getElementById('quarto-embedded-source-code-modal')) {\n    const clipboardModal = new window.ClipboardJS('.code-copy-button[data-in-quarto-modal]', {\n      text: getTextToCopy,\n      container: window.document.getElementById('quarto-embedded-source-code-modal')\n    });\n    clipboardModal.on('success', onCopySuccess);\n  }\n    var localhostRegex = new RegExp(/^(?:http|https):\\/\\/localhost\\:?[0-9]*\\//);\n    var mailtoRegex = new RegExp(/^mailto:/);\n      var filterRegex = new RegExp('/' + window.location.host + '/');\n    var isInternal = (href) =&gt; {\n        return filterRegex.test(href) || localhostRegex.test(href) || mailtoRegex.test(href);\n    }\n    // Inspect non-navigation links and adorn them if external\n \tvar links = window.document.querySelectorAll('a[href]:not(.nav-link):not(.navbar-brand):not(.toc-action):not(.sidebar-link):not(.sidebar-item-toggle):not(.pagination-link):not(.no-external):not([aria-hidden]):not(.dropdown-item):not(.quarto-navigation-tool):not(.about-link)');\n    for (var i=0; i&lt;links.length; i++) {\n      const link = links[i];\n      if (!isInternal(link.href)) {\n        // undo the damage that might have been done by quarto-nav.js in the case of\n        // links that we want to consider external\n        if (link.dataset.originalHref !== undefined) {\n          link.href = link.dataset.originalHref;\n        }\n      }\n    }\n  function tippyHover(el, contentFn, onTriggerFn, onUntriggerFn) {\n    const config = {\n      allowHTML: true,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start',\n    };\n    if (contentFn) {\n      config.content = contentFn;\n    }\n    if (onTriggerFn) {\n      config.onTrigger = onTriggerFn;\n    }\n    if (onUntriggerFn) {\n      config.onUntrigger = onUntriggerFn;\n    }\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      if (note) {\n        return note.innerHTML;\n      } else {\n        return \"\";\n      }\n    });\n  }\n  const xrefs = window.document.querySelectorAll('a.quarto-xref');\n  const processXRef = (id, note) =&gt; {\n    // Strip column container classes\n    const stripColumnClz = (el) =&gt; {\n      el.classList.remove(\"page-full\", \"page-columns\");\n      if (el.children) {\n        for (const child of el.children) {\n          stripColumnClz(child);\n        }\n      }\n    }\n    stripColumnClz(note)\n    if (id === null || id.startsWith('sec-')) {\n      // Special case sections, only their first couple elements\n      const container = document.createElement(\"div\");\n      if (note.children && note.children.length &gt; 2) {\n        container.appendChild(note.children[0].cloneNode(true));\n        for (let i = 1; i &lt; note.children.length; i++) {\n          const child = note.children[i];\n          if (child.tagName === \"P\" && child.innerText === \"\") {\n            continue;\n          } else {\n            container.appendChild(child.cloneNode(true));\n            break;\n          }\n        }\n        if (window.Quarto?.typesetMath) {\n          window.Quarto.typesetMath(container);\n        }\n        return container.innerHTML\n      } else {\n        if (window.Quarto?.typesetMath) {\n          window.Quarto.typesetMath(note);\n        }\n        return note.innerHTML;\n      }\n    } else {\n      // Remove any anchor links if they are present\n      const anchorLink = note.querySelector('a.anchorjs-link');\n      if (anchorLink) {\n        anchorLink.remove();\n      }\n      if (window.Quarto?.typesetMath) {\n        window.Quarto.typesetMath(note);\n      }\n      if (note.classList.contains(\"callout\")) {\n        return note.outerHTML;\n      } else {\n        return note.innerHTML;\n      }\n    }\n  }\n  for (var i=0; i&lt;xrefs.length; i++) {\n    const xref = xrefs[i];\n    tippyHover(xref, undefined, function(instance) {\n      instance.disable();\n      let url = xref.getAttribute('href');\n      let hash = undefined; \n      if (url.startsWith('#')) {\n        hash = url;\n      } else {\n        try { hash = new URL(url).hash; } catch {}\n      }\n      if (hash) {\n        const id = hash.replace(/^#\\/?/, \"\");\n        const note = window.document.getElementById(id);\n        if (note !== null) {\n          try {\n            const html = processXRef(id, note.cloneNode(true));\n            instance.setContent(html);\n          } finally {\n            instance.enable();\n            instance.show();\n          }\n        } else {\n          // See if we can fetch this\n          fetch(url.split('#')[0])\n          .then(res =&gt; res.text())\n          .then(html =&gt; {\n            const parser = new DOMParser();\n            const htmlDoc = parser.parseFromString(html, \"text/html\");\n            const note = htmlDoc.getElementById(id);\n            if (note !== null) {\n              const html = processXRef(id, note);\n              instance.setContent(html);\n            } \n          }).finally(() =&gt; {\n            instance.enable();\n            instance.show();\n          });\n        }\n      } else {\n        // See if we can fetch a full url (with no hash to target)\n        // This is a special case and we should probably do some content thinning / targeting\n        fetch(url)\n        .then(res =&gt; res.text())\n        .then(html =&gt; {\n          const parser = new DOMParser();\n          const htmlDoc = parser.parseFromString(html, \"text/html\");\n          const note = htmlDoc.querySelector('main.content');\n          if (note !== null) {\n            // This should only happen for chapter cross references\n            // (since there is no id in the URL)\n            // remove the first header\n            if (note.children.length &gt; 0 && note.children[0].tagName === \"HEADER\") {\n              note.children[0].remove();\n            }\n            const html = processXRef(null, note);\n            instance.setContent(html);\n          } \n        }).finally(() =&gt; {\n          instance.enable();\n          instance.show();\n        });\n      }\n    }, function(instance) {\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            div.style.left = 0;\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n        // Handle positioning of the toggle\n    window.addEventListener(\n      \"resize\",\n      throttle(() =&gt; {\n        elRect = undefined;\n        if (selectedAnnoteEl) {\n          selectCodeLines(selectedAnnoteEl);\n        }\n      }, 10)\n    );\n    function throttle(fn, ms) {\n    let throttle = false;\n    let timer;\n      return (...args) =&gt; {\n        if(!throttle) { // first call gets through\n            fn.apply(this, args);\n            throttle = true;\n        } else { // all the others get throttled\n            if(timer) clearTimeout(timer); // cancel #2\n            timer = setTimeout(() =&gt; {\n              fn.apply(this, args);\n              timer = throttle = false;\n            }, ms);\n        }\n      };\n    }\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "about.html#about",
    "href": "about.html#about",
    "title": "About Me",
    "section": "",
    "text": "My name is Sanjana and I am currently an third year undergrad at UCSB studying Environmental Science and Spatial Science! I am interested in climate change science especially in the marine sphere and data science/visualization. I am passionate about bridging the gap between the science community and the public through data visualization and mapping and removing the barriers of high scientific literacy needed to understand dense material.\nI am originally from Utah and I love traveling, hiking, roadtrips, sunset plunges, thrifting, any form of art but especially oil and charcoal, and grew up learning a classical Indian dance form called Bharatanatyam. I just started scuba diving"
  },
  {
    "objectID": "education.html",
    "href": "education.html",
    "title": "Education",
    "section": "",
    "text": "&lt;p&gt;This browser does not support PDFs. Please download the file:&lt;/p&gt;\n&lt;p&gt;&lt;a href=\"media/may2025CV.pdf\"&gt;Download PDF&lt;/a&gt;.&lt;/p&gt;\n&lt;iframe&gt;\n&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyLXRpdGxl\"&gt;Education&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXItdGl0bGU=\"&gt;Sanjana Sujeet&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6SG9tZQ==\"&gt;Home&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6L2luZGV4Lmh0bWw=\"&gt;/index.html&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6QWJvdXQ=\"&gt;About&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6L2Fib3V0Lmh0bWw=\"&gt;/about.html&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6RWR1Y2F0aW9u\"&gt;Education&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6L2VkdWNhdGlvbi5odG1s\"&gt;/education.html&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6VHJhdmVs\"&gt;Travel&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6L3RyYXZlbHRyYWNrZXIuaHRtbA==\"&gt;/traveltracker.html&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6UHJvamVjdHM=\"&gt;Projects&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6L1Byb2plY3RzLmh0bWw=\"&gt;/Projects.html&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLW1ldGF0aXRsZQ==\"&gt;Education&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLXR3aXR0ZXJjYXJkdGl0bGU=\"&gt;Education&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLW9nY2FyZHRpdGxl\"&gt;Education&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLXR3aXR0ZXJjYXJkZGVzYw==\"&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLW9nY2FyZGRkZXNj\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/section&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const onCopySuccess = function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  }\n  const getTextToCopy = function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button:not([data-in-quarto-modal])', {\n    text: getTextToCopy\n  });\n  clipboard.on('success', onCopySuccess);\n  if (window.document.getElementById('quarto-embedded-source-code-modal')) {\n    const clipboardModal = new window.ClipboardJS('.code-copy-button[data-in-quarto-modal]', {\n      text: getTextToCopy,\n      container: window.document.getElementById('quarto-embedded-source-code-modal')\n    });\n    clipboardModal.on('success', onCopySuccess);\n  }\n    var localhostRegex = new RegExp(/^(?:http|https):\\/\\/localhost\\:?[0-9]*\\//);\n    var mailtoRegex = new RegExp(/^mailto:/);\n      var filterRegex = new RegExp('/' + window.location.host + '/');\n    var isInternal = (href) =&gt; {\n        return filterRegex.test(href) || localhostRegex.test(href) || mailtoRegex.test(href);\n    }\n    // Inspect non-navigation links and adorn them if external\n \tvar links = window.document.querySelectorAll('a[href]:not(.nav-link):not(.navbar-brand):not(.toc-action):not(.sidebar-link):not(.sidebar-item-toggle):not(.pagination-link):not(.no-external):not([aria-hidden]):not(.dropdown-item):not(.quarto-navigation-tool):not(.about-link)');\n    for (var i=0; i&lt;links.length; i++) {\n      const link = links[i];\n      if (!isInternal(link.href)) {\n        // undo the damage that might have been done by quarto-nav.js in the case of\n        // links that we want to consider external\n        if (link.dataset.originalHref !== undefined) {\n          link.href = link.dataset.originalHref;\n        }\n      }\n    }\n  function tippyHover(el, contentFn, onTriggerFn, onUntriggerFn) {\n    const config = {\n      allowHTML: true,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start',\n    };\n    if (contentFn) {\n      config.content = contentFn;\n    }\n    if (onTriggerFn) {\n      config.onTrigger = onTriggerFn;\n    }\n    if (onUntriggerFn) {\n      config.onUntrigger = onUntriggerFn;\n    }\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      if (note) {\n        return note.innerHTML;\n      } else {\n        return \"\";\n      }\n    });\n  }\n  const xrefs = window.document.querySelectorAll('a.quarto-xref');\n  const processXRef = (id, note) =&gt; {\n    // Strip column container classes\n    const stripColumnClz = (el) =&gt; {\n      el.classList.remove(\"page-full\", \"page-columns\");\n      if (el.children) {\n        for (const child of el.children) {\n          stripColumnClz(child);\n        }\n      }\n    }\n    stripColumnClz(note)\n    if (id === null || id.startsWith('sec-')) {\n      // Special case sections, only their first couple elements\n      const container = document.createElement(\"div\");\n      if (note.children && note.children.length &gt; 2) {\n        container.appendChild(note.children[0].cloneNode(true));\n        for (let i = 1; i &lt; note.children.length; i++) {\n          const child = note.children[i];\n          if (child.tagName === \"P\" && child.innerText === \"\") {\n            continue;\n          } else {\n            container.appendChild(child.cloneNode(true));\n            break;\n          }\n        }\n        if (window.Quarto?.typesetMath) {\n          window.Quarto.typesetMath(container);\n        }\n        return container.innerHTML\n      } else {\n        if (window.Quarto?.typesetMath) {\n          window.Quarto.typesetMath(note);\n        }\n        return note.innerHTML;\n      }\n    } else {\n      // Remove any anchor links if they are present\n      const anchorLink = note.querySelector('a.anchorjs-link');\n      if (anchorLink) {\n        anchorLink.remove();\n      }\n      if (window.Quarto?.typesetMath) {\n        window.Quarto.typesetMath(note);\n      }\n      if (note.classList.contains(\"callout\")) {\n        return note.outerHTML;\n      } else {\n        return note.innerHTML;\n      }\n    }\n  }\n  for (var i=0; i&lt;xrefs.length; i++) {\n    const xref = xrefs[i];\n    tippyHover(xref, undefined, function(instance) {\n      instance.disable();\n      let url = xref.getAttribute('href');\n      let hash = undefined; \n      if (url.startsWith('#')) {\n        hash = url;\n      } else {\n        try { hash = new URL(url).hash; } catch {}\n      }\n      if (hash) {\n        const id = hash.replace(/^#\\/?/, \"\");\n        const note = window.document.getElementById(id);\n        if (note !== null) {\n          try {\n            const html = processXRef(id, note.cloneNode(true));\n            instance.setContent(html);\n          } finally {\n            instance.enable();\n            instance.show();\n          }\n        } else {\n          // See if we can fetch this\n          fetch(url.split('#')[0])\n          .then(res =&gt; res.text())\n          .then(html =&gt; {\n            const parser = new DOMParser();\n            const htmlDoc = parser.parseFromString(html, \"text/html\");\n            const note = htmlDoc.getElementById(id);\n            if (note !== null) {\n              const html = processXRef(id, note);\n              instance.setContent(html);\n            } \n          }).finally(() =&gt; {\n            instance.enable();\n            instance.show();\n          });\n        }\n      } else {\n        // See if we can fetch a full url (with no hash to target)\n        // This is a special case and we should probably do some content thinning / targeting\n        fetch(url)\n        .then(res =&gt; res.text())\n        .then(html =&gt; {\n          const parser = new DOMParser();\n          const htmlDoc = parser.parseFromString(html, \"text/html\");\n          const note = htmlDoc.querySelector('main.content');\n          if (note !== null) {\n            // This should only happen for chapter cross references\n            // (since there is no id in the URL)\n            // remove the first header\n            if (note.children.length &gt; 0 && note.children[0].tagName === \"HEADER\") {\n              note.children[0].remove();\n            }\n            const html = processXRef(null, note);\n            instance.setContent(html);\n          } \n        }).finally(() =&gt; {\n          instance.enable();\n          instance.show();\n        });\n      }\n    }, function(instance) {\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            div.style.left = 0;\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n        // Handle positioning of the toggle\n    window.addEventListener(\n      \"resize\",\n      throttle(() =&gt; {\n        elRect = undefined;\n        if (selectedAnnoteEl) {\n          selectCodeLines(selectedAnnoteEl);\n        }\n      }, 10)\n    );\n    function throttle(fn, ms) {\n    let throttle = false;\n    let timer;\n      return (...args) =&gt; {\n        if(!throttle) { // first call gets through\n            fn.apply(this, args);\n            throttle = true;\n        } else { // all the others get throttled\n            if(timer) clearTimeout(timer); // cancel #2\n            timer = setTimeout(() =&gt; {\n              fn.apply(this, args);\n              timer = throttle = false;\n            }, ms);\n        }\n      };\n    }\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "education.html#my-cv",
    "href": "education.html#my-cv",
    "title": "Education",
    "section": "",
    "text": "&lt;p&gt;This browser does not support PDFs. Please download the file:&lt;/p&gt;\n&lt;p&gt;&lt;a href=\"media/may2025CV.pdf\"&gt;Download PDF&lt;/a&gt;.&lt;/p&gt;\n&lt;iframe&gt;\n&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyLXRpdGxl\"&gt;Education&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXItdGl0bGU=\"&gt;Sanjana Sujeet&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6SG9tZQ==\"&gt;Home&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6L2luZGV4Lmh0bWw=\"&gt;/index.html&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6QWJvdXQ=\"&gt;About&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6L2Fib3V0Lmh0bWw=\"&gt;/about.html&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6RWR1Y2F0aW9u\"&gt;Education&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6L2VkdWNhdGlvbi5odG1s\"&gt;/education.html&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6VHJhdmVs\"&gt;Travel&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6L3RyYXZlbHRyYWNrZXIuaHRtbA==\"&gt;/traveltracker.html&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6UHJvamVjdHM=\"&gt;Projects&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6L1Byb2plY3RzLmh0bWw=\"&gt;/Projects.html&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLW1ldGF0aXRsZQ==\"&gt;Education&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLXR3aXR0ZXJjYXJkdGl0bGU=\"&gt;Education&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLW9nY2FyZHRpdGxl\"&gt;Education&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLXR3aXR0ZXJjYXJkZGVzYw==\"&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLW9nY2FyZGRkZXNj\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/section&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const onCopySuccess = function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  }\n  const getTextToCopy = function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button:not([data-in-quarto-modal])', {\n    text: getTextToCopy\n  });\n  clipboard.on('success', onCopySuccess);\n  if (window.document.getElementById('quarto-embedded-source-code-modal')) {\n    const clipboardModal = new window.ClipboardJS('.code-copy-button[data-in-quarto-modal]', {\n      text: getTextToCopy,\n      container: window.document.getElementById('quarto-embedded-source-code-modal')\n    });\n    clipboardModal.on('success', onCopySuccess);\n  }\n    var localhostRegex = new RegExp(/^(?:http|https):\\/\\/localhost\\:?[0-9]*\\//);\n    var mailtoRegex = new RegExp(/^mailto:/);\n      var filterRegex = new RegExp('/' + window.location.host + '/');\n    var isInternal = (href) =&gt; {\n        return filterRegex.test(href) || localhostRegex.test(href) || mailtoRegex.test(href);\n    }\n    // Inspect non-navigation links and adorn them if external\n \tvar links = window.document.querySelectorAll('a[href]:not(.nav-link):not(.navbar-brand):not(.toc-action):not(.sidebar-link):not(.sidebar-item-toggle):not(.pagination-link):not(.no-external):not([aria-hidden]):not(.dropdown-item):not(.quarto-navigation-tool):not(.about-link)');\n    for (var i=0; i&lt;links.length; i++) {\n      const link = links[i];\n      if (!isInternal(link.href)) {\n        // undo the damage that might have been done by quarto-nav.js in the case of\n        // links that we want to consider external\n        if (link.dataset.originalHref !== undefined) {\n          link.href = link.dataset.originalHref;\n        }\n      }\n    }\n  function tippyHover(el, contentFn, onTriggerFn, onUntriggerFn) {\n    const config = {\n      allowHTML: true,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start',\n    };\n    if (contentFn) {\n      config.content = contentFn;\n    }\n    if (onTriggerFn) {\n      config.onTrigger = onTriggerFn;\n    }\n    if (onUntriggerFn) {\n      config.onUntrigger = onUntriggerFn;\n    }\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      if (note) {\n        return note.innerHTML;\n      } else {\n        return \"\";\n      }\n    });\n  }\n  const xrefs = window.document.querySelectorAll('a.quarto-xref');\n  const processXRef = (id, note) =&gt; {\n    // Strip column container classes\n    const stripColumnClz = (el) =&gt; {\n      el.classList.remove(\"page-full\", \"page-columns\");\n      if (el.children) {\n        for (const child of el.children) {\n          stripColumnClz(child);\n        }\n      }\n    }\n    stripColumnClz(note)\n    if (id === null || id.startsWith('sec-')) {\n      // Special case sections, only their first couple elements\n      const container = document.createElement(\"div\");\n      if (note.children && note.children.length &gt; 2) {\n        container.appendChild(note.children[0].cloneNode(true));\n        for (let i = 1; i &lt; note.children.length; i++) {\n          const child = note.children[i];\n          if (child.tagName === \"P\" && child.innerText === \"\") {\n            continue;\n          } else {\n            container.appendChild(child.cloneNode(true));\n            break;\n          }\n        }\n        if (window.Quarto?.typesetMath) {\n          window.Quarto.typesetMath(container);\n        }\n        return container.innerHTML\n      } else {\n        if (window.Quarto?.typesetMath) {\n          window.Quarto.typesetMath(note);\n        }\n        return note.innerHTML;\n      }\n    } else {\n      // Remove any anchor links if they are present\n      const anchorLink = note.querySelector('a.anchorjs-link');\n      if (anchorLink) {\n        anchorLink.remove();\n      }\n      if (window.Quarto?.typesetMath) {\n        window.Quarto.typesetMath(note);\n      }\n      if (note.classList.contains(\"callout\")) {\n        return note.outerHTML;\n      } else {\n        return note.innerHTML;\n      }\n    }\n  }\n  for (var i=0; i&lt;xrefs.length; i++) {\n    const xref = xrefs[i];\n    tippyHover(xref, undefined, function(instance) {\n      instance.disable();\n      let url = xref.getAttribute('href');\n      let hash = undefined; \n      if (url.startsWith('#')) {\n        hash = url;\n      } else {\n        try { hash = new URL(url).hash; } catch {}\n      }\n      if (hash) {\n        const id = hash.replace(/^#\\/?/, \"\");\n        const note = window.document.getElementById(id);\n        if (note !== null) {\n          try {\n            const html = processXRef(id, note.cloneNode(true));\n            instance.setContent(html);\n          } finally {\n            instance.enable();\n            instance.show();\n          }\n        } else {\n          // See if we can fetch this\n          fetch(url.split('#')[0])\n          .then(res =&gt; res.text())\n          .then(html =&gt; {\n            const parser = new DOMParser();\n            const htmlDoc = parser.parseFromString(html, \"text/html\");\n            const note = htmlDoc.getElementById(id);\n            if (note !== null) {\n              const html = processXRef(id, note);\n              instance.setContent(html);\n            } \n          }).finally(() =&gt; {\n            instance.enable();\n            instance.show();\n          });\n        }\n      } else {\n        // See if we can fetch a full url (with no hash to target)\n        // This is a special case and we should probably do some content thinning / targeting\n        fetch(url)\n        .then(res =&gt; res.text())\n        .then(html =&gt; {\n          const parser = new DOMParser();\n          const htmlDoc = parser.parseFromString(html, \"text/html\");\n          const note = htmlDoc.querySelector('main.content');\n          if (note !== null) {\n            // This should only happen for chapter cross references\n            // (since there is no id in the URL)\n            // remove the first header\n            if (note.children.length &gt; 0 && note.children[0].tagName === \"HEADER\") {\n              note.children[0].remove();\n            }\n            const html = processXRef(null, note);\n            instance.setContent(html);\n          } \n        }).finally(() =&gt; {\n          instance.enable();\n          instance.show();\n        });\n      }\n    }, function(instance) {\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            div.style.left = 0;\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n        // Handle positioning of the toggle\n    window.addEventListener(\n      \"resize\",\n      throttle(() =&gt; {\n        elRect = undefined;\n        if (selectedAnnoteEl) {\n          selectCodeLines(selectedAnnoteEl);\n        }\n      }, 10)\n    );\n    function throttle(fn, ms) {\n    let throttle = false;\n    let timer;\n      return (...args) =&gt; {\n        if(!throttle) { // first call gets through\n            fn.apply(this, args);\n            throttle = true;\n        } else { // all the others get throttled\n            if(timer) clearTimeout(timer); // cancel #2\n            timer = setTimeout(() =&gt; {\n              fn.apply(this, args);\n              timer = throttle = false;\n            }, ms);\n        }\n      };\n    }\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "traveltracker.html",
    "href": "traveltracker.html",
    "title": "Places I’ve Been",
    "section": "",
    "text": "One of my favorite things to do is to create detailed itineraries(that my travel buddies have a love-hate relationship with, I am not a believer of resting during trips and I schedule everything down to the last minute) and explore new cities. I also love collecting tangible memories from each place through ticket stubs, postcards, and lots and lots of photos. One of my biggest goals is to travel to as many countries as possible and cover this map with pins!\nClick on each pin to see some pictures of where I’ve been and a little description of what the trip meant to me:)"
  },
  {
    "objectID": "traveltracker.html#my-travel-map",
    "href": "traveltracker.html#my-travel-map",
    "title": "Places I’ve Been",
    "section": "My Travel Map",
    "text": "My Travel Map\nOne of my favorite things to do is to explore new cities and create detailed itineraries(that my travel buddies have a love-hate relationship with, I am not a believer of resting during trips and I schedule everything down to the last minute). I also love collecting tangible memories from each place through ticket stubs, postcards, and lots and lots of photos. One of my biggest goals is to travel to as many countries as possible and cover this map with pins!\nClick on each pin to see some pictures of where I’ve been and a little description of what the trip meant to me:) You can also view a gallery of all these places below the map.\n\n\n\n\n\nAll Locations by Region\n\n\n\n\nSanta Barbara, CA\n\n\n\n\n\nSanta Clara, CA\n\n\n\n\n\nSan Francisco, CA\n\n\n\n\n\nSan Luis Obispo, CA\n\n\n\n\n\nVentura, CA\n\n\n\n\n\nSolvang, CA\n\n\n\n\n\nSummerland, CA\n\n\n\n\n\nMorro Bay, CA\n\n\n\n\n\nPismo Beach, CA\n\n\n\n\n\nLos Angeles, CA\n\n\n\n\n\nSan Diego, CA\n\n\n\n\n\nSalt Lake City, UT\n\n\n\n\n\nNew York City, NY\n\n\n\n\n\nWashington, DC\n\n\n\n\n\nCochi, Kerala\n\n\n\n\n\nKozhikode, Kerala\n\n\n\n\n\nMumbai, India\n\n\n\n\n\nDubai, UAE\n\n\n\n\n\nSacramento, CA\n\n\n\n\n\nCalaveras Big Trees State Park, CA\n\n\n\n\n\nMesa Verde, CO\n\n\n\n\n\nFort Lauderdale, FL\n\n\n\n\n\nPage, AZ\n\n\n\n\n\nJackson Hole, WY\n\n\n\n\n\nAnn Arbor, MI\n\n\n\n\n\nMadison, WI\n\n\n\n\n\nChicago, IL"
  },
  {
    "objectID": "traveltracker.html#all-locations-by-region",
    "href": "traveltracker.html#all-locations-by-region",
    "title": "Places I’ve Been",
    "section": "📍 All Locations by Region",
    "text": "📍 All Locations by Region\n\nUnited States\n::: {.callout-note collapse title=“California”} ::: {.grid columns=2} ::: {.card} #### Santa Barbara, CA  The most perfect college town to ever exist, I compare every city I visit to beautiful, beachy, WALKABLE Santa Barbara. :::\n\nSanta Clara, CA\n I was born here but we moved when I was 1 so does this even count? Went back to visit while touring UCSC and they had amazing chaat restaurant and sweet shops.\n\n\nSan Francisco, CA\n 2024 Spring Break was my first trip I’ve been on without my parents. I went with the most perfect travel buddy Bhavya and we fit in every single touristy activity in 5 days. God bless public transport.\n\n\nSan Luis Obispo, CA\n Small but adorable downtown area, cute shops and Giuseppe’s had the best pasta ever.\n\n\nVentura, CA\n I liked it a lot more than I thought I would! Thrifter’s heaven omg and really cute cafes!\n\n\nSolvang, CA\n Straight out of a fairybook. Plus Ostrichland is something I never knew I needed.\n\n\nSummerland, CA\n The garden pavilion behind the crystal shop is straight out of my dreams. Plus bird sanctuary, bookshop, antique stores, and old style diners? Cute day trip.\n\n\nMorro Bay, CA\n SEA OTTERS!!! that’s all.\n\n\nPismo Beach, CA\n I’m not sure if I get the hype but it was a good sunset.\n\n\nLos Angeles, CA\n So far just been to The Getty aka my favorite place on earth so far and the Original Farmers Market+The Grove.\n\n\nSan Diego, CA\n Best farmer’s market I’ve been to, love La Jolla area especially snorkeling and of course all the museums. Housemate trip Summer 2024 and Sorority retreat Jan 2025 (plus so many times as a kid and touring UCSD).\n\n::: :::\n\n\n\n #### Salt Lake City, UT My hometown. Well technically it’s South Jordan and Draper but close enough. The people are iffy but you can’t complain about the views.\n\n\n\n\n\n\n #### New York City, NY Visited Pri for Thanksgiving break 2024, overcame being scared of traveling alone (especially on the subway), ate so much good food for SO cheap, and explored basically all the main areas in 5 days. I love NYC, take me back.\n\n\n\n\n\n\n #### Washington, DC Wait so I love DC so much! Went right during cherry blossom season Spring Break 2025 to visit Bhavya and the museums! food! transport! architecture style! events and markets! also I saw Giant Pandas which is a win.\n\n\n\n\n\n\nInternational\n\n\n\n #### Cochi, Kerala Dad’s side.\n\n\n #### Kozhikode, Kerala Mom’s side.\n\n\n #### Mumbai (Bombay), India I love bombay shopping.\n\n\n\n\n\n\n #### Dubai, UAE Still haven’t done a desert safari but I have fed a sloth."
  },
  {
    "objectID": "testing.html",
    "href": "testing.html",
    "title": "Collapse Test",
    "section": "",
    "text": "This should appear inside a collapsible box."
  },
  {
    "objectID": "traveltracker.html#all-locations-by-region-1",
    "href": "traveltracker.html#all-locations-by-region-1",
    "title": "Places I’ve Been",
    "section": "📍 All Locations by Region",
    "text": "📍 All Locations by Region\n\nUnited States\n\n\n\n #### Santa Barbara, CA The most perfect college town to ever exist, I compare every city I visit to beautiful, beachy, WALKABLE Santa Barbara.\n\n\n #### Santa Clara, CA I was born here but we moved when I was 1 so does this even count? Went back to visit while touring UCSC and they had amazing chaat restaurant and sweet shops.\n\n\n #### San Francisco, CA 2024 Spring Break was my first trip I’ve been on without my parents. I went with the most perfect travel buddy Bhavya and we fit in every single touristy activity in 5 days. God bless public transport.\n\n\n #### San Luis Obispo, CA Small but adorable downtown area, cute shops and Giuseppe’s had the best pasta ever.\n\n\n #### Ventura, CA I liked it a lot more than I thought I would! Thrifter’s heaven omg and really cute cafes!\n\n\n #### Solvang, CA Straight out of a fairybook. Plus Ostrichland is something I never knew I needed.\n\n\n #### Summerland, CA The garden pavilion behind the crystal shop is straight out of my dreams. Plus bird sanctuary, bookshop, antique stores, and old style diners? Cute day trip.\n\n\n #### Morro Bay, CA SEA OTTERS!!! that’s all.\n\n\n #### Pismo Beach, CA I’m not sure if I get the hype but it was a good sunset.\n\n\n #### Los Angeles, CA So far just been to The Getty aka my favorite place on earth so far and the Original Farmers Market+The Grove.\n\n\n #### San Diego, CA Best farmer’s market I’ve been to, love La Jolla area especially snorkeling and of course all the museums. Housemate trip Summer 2024 and Sorority retreat Jan 2025 (plus so many times as a kid and touring UCSD).\n\n\n\n\n\n\n #### Salt Lake City, UT My hometown. Well technically it’s South Jordan and Draper but close enough. The people are iffy but you can’t complain about the views.\n\n\n\n\n\n\n #### New York City, NY Visited Pri for Thanksgiving break 2024, overcame being scared of traveling alone (especially on the subway), ate so much good food for SO cheap, and explored basically all the main areas in 5 days. I love NYC, take me back.\n\n\n\n\n\n\n #### Washington, DC Wait so I love DC so much! Went right during cherry blossom season Spring Break 2025 to visit Bhavya and the museums! food! transport! architecture style! events and markets! also I saw Giant Pandas which is a win.\n\n\n\n\n\n\nInternational\n\n\n\n #### Cochi, Kerala Dad’s side.\n\n\n #### Kozhikode, Kerala Mom’s side.\n\n\n #### Mumbai (Bombay), India I love bombay shopping.\n\n\n\n\n\n\n #### Dubai, UAE Still haven’t done a desert safari but I have fed a sloth."
  },
  {
    "objectID": "Projects.html",
    "href": "Projects.html",
    "title": "Projects",
    "section": "",
    "text": "### SNARL Microplastic Analysis\nI went to the Sierra Nevada’s\n\n\n### Tide and Terra Magazine\nMe and Evelyn\n\n\n### 📊 Sustainable Architecture\nA literature review"
  },
  {
    "objectID": "AllProjects.html",
    "href": "AllProjects.html",
    "title": "All Projects",
    "section": "",
    "text": "Tide and Terra Magazine\n\n\na UCSB mini magazine focused on communicating environmental topics- by students, from students\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGreen Architecture- Comparing Ancient Civilization’s Techniques to Today’s\n\n\nA literature review research paper on Ancient Sustainable Architecture Techniques and modern alternatives, won the Library Award for Undergraduate Research 1st place for…\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSNARL Plastics\n\n\nFUERTE research project with Evelyn Tsang and Andrea Estrada\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRichmond Urban Heat Island Effect Dashboard\n\n\nan ArcGIS Dashboard visualizing the Urban Heat Island Effect in Richmond, Virginia made in GEOG W12\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCholera StoryMap\n\n\nan ArcGIS StoryMap visualizing John Snow’s Cholera outbreak Map made in GEOG W12\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVolcano StoryMap\n\n\nan ArcGIS StoryMap visualizing the 2018 Kilauea Volcanic Eruption made in GEOG W12\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "AllProjects.html#snarl-microplastic-analysis",
    "href": "AllProjects.html#snarl-microplastic-analysis",
    "title": "All Projects",
    "section": "",
    "text": "I went to the Sierra Nevada’s"
  },
  {
    "objectID": "AllProjects.html#tide-and-terra-magazine",
    "href": "AllProjects.html#tide-and-terra-magazine",
    "title": "All Projects",
    "section": "Tide and Terra Magazine",
    "text": "Tide and Terra Magazine\nMe and Evelyn"
  },
  {
    "objectID": "AllProjects.html#sustainable-architecture",
    "href": "AllProjects.html#sustainable-architecture",
    "title": "All Projects",
    "section": "Sustainable Architecture",
    "text": "Sustainable Architecture\nA literature review"
  },
  {
    "objectID": "posts/TideandTerra/index.html",
    "href": "posts/TideandTerra/index.html",
    "title": "Tide and Terra Magazine",
    "section": "",
    "text": "Tide and Terra is a passion project collaboration between me and my friend, Evelyn Tsang, that combines both our interests of science communication and environmental issues with art and creative content.\nWebsite coming soon…\nThis is a draft of our first issue that will be printed in June 2024!"
  },
  {
    "objectID": "posts/Architecture/index.html",
    "href": "posts/Architecture/index.html",
    "title": "Green Architecture- Comparing Ancient Civilization’s Techniques to Today’s",
    "section": "",
    "text": "For my ENVS 40 Critical Thinking and Reasoning in Environmental Studies, I wrote a research paper where I conducted literature reviews on architecture styles across culture. I wanted to combine my interests of anthropology and sustainability. This essay goes over modern high-energy construction issues, different ancient buildings from various civilizations that addressed the same issues while using less energy, and suggestions on how to integrate them together.\nIt won 1st place in the Library Award for Undergraduate Research in the Social Science category and was published in the Open Access Publications from the University of California- eScholarship! here is a link to the published article\nor view it right here:"
  },
  {
    "objectID": "posts/SNARL_Plastics/index.html",
    "href": "posts/SNARL_Plastics/index.html",
    "title": "SNARL Plastics",
    "section": "",
    "text": "During September 2023, FUERTE, a field-work fellowship program, took 10 fellows including me and my project team to SNARL, the Sierra Nevada Aquatic Research Laboratory. Here we met professionals, learned R, and did a lot of hikes and fieldwork that culminated in our mini projects that we presented at SNARL and later at the EEMB Undergraduate Symposium. Our project was analyzing the macro and microplastics present in the Sierra Nevada lakes that we hiked to.\nHere are some preliminary graphs that helped us analyse, all code was written by me with help from Dr. Jannine Chamorro. This was my first time ever coding in R and this project sparked my interest in data science."
  },
  {
    "objectID": "posts/SNARL_Plastics/index.html#here-i-mapped-macroplastic-site-popularity-based-on-the-previous-graph",
    "href": "posts/SNARL_Plastics/index.html#here-i-mapped-macroplastic-site-popularity-based-on-the-previous-graph",
    "title": "SNARL Plastics",
    "section": "Here I mapped macroplastic site popularity based on the previous graph:",
    "text": "Here I mapped macroplastic site popularity based on the previous graph:\nmacropoponly &lt;-macro %&gt;% filter(pass==3)%&gt;% mutate(site=factor(site,levels=c(\"June\", \"Mary\", \"Parker\", \"Crystal\") ))\nggplot(data=macropoponly, aes(x=site, y=review_popularity, fill=popular)) +\n  geom_col() +\n  scale_fill_manual(values=c(\"darkolivegreen3\", \"steelblue2\")) +\n  labs(title=\"Site Popularity\", x=\"Site\", y=\"Number of Reviews\")"
  },
  {
    "objectID": "posts/SNARL_Plastics/index.html#here-i-graphed-how-much-macroplastic-was-at-each-site",
    "href": "posts/SNARL_Plastics/index.html#here-i-graphed-how-much-macroplastic-was-at-each-site",
    "title": "SNARL Plastics",
    "section": "Here I graphed how much macroplastic was at each site:",
    "text": "Here I graphed how much macroplastic was at each site:\nmacrosumonly&lt;-macrosumonly %&gt;% mutate(site=factor(site,levels=c(\"June\", \"Mary\", \"Parker\", \"Crystal\") ))\nggplot(data=macrosumonly, aes(x=site, y=plastic_sum, fill=popular)) +\n  geom_col() +\n  scale_fill_manual(values=c(\"darkolivegreen3\", \"steelblue2\")) +\n  labs(title=\"Total Macroplastic per Site\", x= \"Site\", y=\"Total Macroplastic Count(pieces)\")"
  },
  {
    "objectID": "posts/SNARL_Plastics/index.html#here-we-looked-at-the-correlation-of-macroplastic-presence-and-popularity-of-the-site-based-on-google-reviews",
    "href": "posts/SNARL_Plastics/index.html#here-we-looked-at-the-correlation-of-macroplastic-presence-and-popularity-of-the-site-based-on-google-reviews",
    "title": "SNARL Plastics",
    "section": "Here we looked at the correlation of macroplastic presence and popularity of the site based on google reviews:",
    "text": "Here we looked at the correlation of macroplastic presence and popularity of the site based on google reviews:\nggplot(data=macrosumonly, aes(x=review_popularity, y=plastic_mass_sum)) +\n  geom_point() +\n  stat_smooth(method=\"lm\", se=FALSE) +\n  labs(title=\"Macroplastics and popularity\", x=\"Popularity(no. of google reviews)\", y=\"Macroplastics(count)\")"
  },
  {
    "objectID": "posts/SNARL_Plastics/index.html#here-i-cleaned-microplastic-data-and-looked-at-how-much-was-at-each-site-we-collected-sediment-samples",
    "href": "posts/SNARL_Plastics/index.html#here-i-cleaned-microplastic-data-and-looked-at-how-much-was-at-each-site-we-collected-sediment-samples",
    "title": "SNARL Plastics",
    "section": "Here I cleaned microplastic data and looked at how much was at each site we collected sediment samples:",
    "text": "Here I cleaned microplastic data and looked at how much was at each site we collected sediment samples:\nmicro&lt;-micro %&gt;% mutate(count_per_gram = total_count/sediment_weight_g) %&gt;%\n  filter(!site%in% c(\"Convict RT\", \"Convict\"))\nmicro$site&lt;-as.factor(micro$site)\nmicro&lt;-micro %&gt;% mutate(site=factor(site,levels=c(\"Convict RT\", \"Convict\",\"June\",\"Silver\", \"Mary\", \"Parker\", \"Crystal\",\"Marmot\", \"Trapdoor\") ))\nmicro$fishing&lt;-as.factor(micro$fishing)\nggplot(data=micro, aes(site,count_per_gram, fill=fishing)) +\n  geom_col() +\n  scale_fill_manual(values=c(\"darkolivegreen4\", \"steelblue2\",\"yellow\")) +\n  labs(title=\"Total Microplastics per gram of sediment at each site\", x= \"Site\", y=\"Count/Gram\")"
  },
  {
    "objectID": "posts/SNARL_Plastics/index.html#here-i-looked-at-the-average-microplastic-count-per-site-with-standard-error-bars",
    "href": "posts/SNARL_Plastics/index.html#here-i-looked-at-the-average-microplastic-count-per-site-with-standard-error-bars",
    "title": "SNARL Plastics",
    "section": "here I looked at the average microplastic count per site with standard error bars",
    "text": "here I looked at the average microplastic count per site with standard error bars\nmicro_ave&lt;-micro %&gt;% group_by(fishing) %&gt;% summarize(n=n(), mean=mean(count_per_gram), sd=sd(count_per_gram), standard_error = sd/sqrt(n))\nggplot(data=micro_ave, aes(x=fishing, y=mean, fill=fishing)) +\n  geom_col(stat=\"identity\", position=position_dodge()) +\n  scale_fill_manual(values=c(\"darkolivegreen4\", \"steelblue2\",\"yellow\")) +\n  geom_errorbar(aes(ymin=mean, ymax=mean+sd), width=0.2, position=position_dodge(.9)) +\n  labs(title=\"Average count of microplastic per gram for each fishing category with error bars\", x= \"Fishing\", y=\"Average count/gram\")\n\n\n\n\nWarning in geom_col(stat = \"identity\", position = position_dodge()): Ignoring\nunknown parameters: `stat`"
  },
  {
    "objectID": "posts/SNARL_Plastics/index.html#here-we-looked-at-if-the-amount-of-macroplastics-affected-the-amount-of-microplastics",
    "href": "posts/SNARL_Plastics/index.html#here-we-looked-at-if-the-amount-of-macroplastics-affected-the-amount-of-microplastics",
    "title": "SNARL Plastics",
    "section": "Here we looked at if the amount of macroplastics affected the amount of microplastics:",
    "text": "Here we looked at if the amount of macroplastics affected the amount of microplastics:\nmicro_site_ave &lt;- micro %&gt;% group_by(site) %&gt;% summarize(n=n(), mean=mean(count_per_gram), sd=sd(count_per_gram), standard_error = sd/sqrt(n))\nmacrosumonly$site &lt;- as.character(macrosumonly$site)\nmacrosumonly$site[macrosumonly$site == \"Convict\"] &lt;- \"Convict S\"\nmacrosumonly$site &lt;- as.factor(macrosumonly$site)\nmicro_site_ave$site &lt;- as.character(micro_site_ave$site)\nmicro_site_ave$site[micro_site_ave$site == \"Convict\"] &lt;- \"Convict S\"\nmicro_site_ave$site &lt;- as.factor(micro_site_ave$site)\nall_plastic &lt;- merge(micro_site_ave, macrosumonly)\nggplot(data=all_plastic, aes(x=plastic_sum, y=mean, colour=site)) +\n  geom_point(size=3) +\n  stat_smooth(method=\"lm\") +\n  labs(title=\"Microplastics and Macroplastics\", x= \"Macroplastic(pieces)\", y=\"Microplastics per grams of sediment\")"
  },
  {
    "objectID": "posts/SNARL_Plastics/index.html#here-i-cleaned-the-macroplastic-data-and-looked-at-the-number-of-google-reviews-of-the-lakes-where-we-collected-data",
    "href": "posts/SNARL_Plastics/index.html#here-i-cleaned-the-macroplastic-data-and-looked-at-the-number-of-google-reviews-of-the-lakes-where-we-collected-data",
    "title": "SNARL Plastics",
    "section": "Here I cleaned the macroplastic data and looked at the number of google reviews of the lakes where we collected data:",
    "text": "Here I cleaned the macroplastic data and looked at the number of google reviews of the lakes where we collected data:\nmacro&lt;-macro %&gt;% filter(site%in% c(\"Crystal\", \"Mary\", \"June\", \"Parker\"))\nmacro$site&lt;-as.factor(macro$site)\nmacrosum&lt;-macro %&gt;% group_by(site) %&gt;% mutate(plastic_sum=cumsum(plastic_count), plastic_mass_sum=cumsum(plastic_mass))\nmacrosumonly &lt;-macrosum %&gt;% filter(pass==3)\nmacro&lt;-macro %&gt;% mutate(fishing_plastic=powerbait+fishing_line)\nfishing_macro&lt;-macro %&gt;% group_by(site) %&gt;% mutate(fishingsum=cumsum(fishing_plastic)) %&gt;% filter(pass==3)\nggplot(data=fishing_macro, aes(x=review_popularity, y=fishingsum, fill=popular)) +\n  geom_col() +\n  scale_fill_manual(values=c(\"darkolivegreen3\", \"steelblue2\")) +\n  labs(title=\"Fishing Plastics vs Popularity\", x=\"Number of Reviews\", y=\"Total Fishing Line and Powerbait Count(pieces)\")"
  },
  {
    "objectID": "posts/SNARL_Plastics/index.html#here-we-looked-at-the-average-microplastic-count-per-site-with-standard-error-bars",
    "href": "posts/SNARL_Plastics/index.html#here-we-looked-at-the-average-microplastic-count-per-site-with-standard-error-bars",
    "title": "SNARL Plastics",
    "section": "Here we looked at the average microplastic count per site with standard error bars:",
    "text": "Here we looked at the average microplastic count per site with standard error bars:\nmicro_ave&lt;-micro %&gt;% group_by(fishing) %&gt;% summarize(n=n(), mean=mean(count_per_gram), sd=sd(count_per_gram), standard_error = sd/sqrt(n))\nggplot(data=micro_ave, aes(x=fishing, y=mean, fill=fishing)) +\n  geom_col(stat=\"identity\", position=position_dodge()) +\n  scale_fill_manual(values=c(\"darkolivegreen4\", \"steelblue2\",\"yellow\")) +\n  geom_errorbar(aes(ymin=mean, ymax=mean+sd), width=0.2, position=position_dodge(.9)) +\n  labs(title=\"Average count of microplastic per gram for each fishing category with error bars\", x= \"Fishing\", y=\"Average count/gram\")"
  },
  {
    "objectID": "posts/SNARL_Plastics/index.html#we-made-a-lot-more-graphs-after-this-that-we-used-in-our-eemb-urs-presentation-and-to-draw-conclusions-but-this-was-the-beginning-framework-that-we-presented-at-snarl.",
    "href": "posts/SNARL_Plastics/index.html#we-made-a-lot-more-graphs-after-this-that-we-used-in-our-eemb-urs-presentation-and-to-draw-conclusions-but-this-was-the-beginning-framework-that-we-presented-at-snarl.",
    "title": "SNARL Plastics",
    "section": "We made a lot more graphs after this that we used in our EEMB URS presentation and to draw conclusions, but this was the beginning framework that we presented at SNARL.",
    "text": "We made a lot more graphs after this that we used in our EEMB URS presentation and to draw conclusions, but this was the beginning framework that we presented at SNARL."
  },
  {
    "objectID": "about.html#hiking",
    "href": "about.html#hiking",
    "title": "About Me",
    "section": "hiking…",
    "text": "hiking…\n\nSo far, in Santa Barbara I have been to:\n\nInspiration Point\n\nCold Springs\n\nHot Springs\n\nSeven Falls\n\nGaviota Wind Caves"
  },
  {
    "objectID": "about.html#tidepooling",
    "href": "about.html#tidepooling",
    "title": "About Me",
    "section": "tidepooling…",
    "text": "tidepooling…"
  },
  {
    "objectID": "about.html#sunset-plunges",
    "href": "about.html#sunset-plunges",
    "title": "About Me",
    "section": "sunset plunges…",
    "text": "sunset plunges…"
  },
  {
    "objectID": "about.html#finding-cute-coffee-shops-and-antique-stores",
    "href": "about.html#finding-cute-coffee-shops-and-antique-stores",
    "title": "About Me",
    "section": "finding cute coffee shops and antique stores…",
    "text": "finding cute coffee shops and antique stores…"
  },
  {
    "objectID": "about.html#any-form-of-art",
    "href": "about.html#any-form-of-art",
    "title": "About Me",
    "section": "any form of art…",
    "text": "any form of art…"
  },
  {
    "objectID": "about.html#and-i-just-started-scuba-diving",
    "href": "about.html#and-i-just-started-scuba-diving",
    "title": "About Me",
    "section": "and I just started scuba diving!",
    "text": "and I just started scuba diving!\n\nopen water cert: august 2024\nscientific cert coming soon!"
  },
  {
    "objectID": "about.html#traveling",
    "href": "about.html#traveling",
    "title": "About Me",
    "section": "traveling…",
    "text": "traveling…\ncheck out my travel tracking page through the navigation bar!"
  },
  {
    "objectID": "about.html#section",
    "href": "about.html#section",
    "title": "About Me",
    "section": "…",
    "text": "…\nBut I have also hiked around the Sierra Nevadas, Utah, and 13/63 of the National Parks in the US:\n\nArches\n\nBryce Canyon\n\nCanyonlands\n\nCapitol Reef\n\nEverglades\n\nGrand Canyon\n\nGrand Teton\n\nMesa Verde\n\nRedwood\n\nSequoia\n\nYellowstone\n\nYosemite\n\nZion"
  },
  {
    "objectID": "about.html#art",
    "href": "about.html#art",
    "title": "About Me",
    "section": "art…",
    "text": "art…\nMy mom is an art teacher so I’ve grown up always doing art\n\nMy favorite medium is oil paint, but I also use charcoal, pen and ink, linography, watercolor, acrylic, pastel, and very beginner level pottery."
  },
  {
    "objectID": "about.html#number-1",
    "href": "about.html#number-1",
    "title": "About Me",
    "section": "number 1",
    "text": "number 1"
  },
  {
    "objectID": "about.html#number-2",
    "href": "about.html#number-2",
    "title": "About Me",
    "section": "number 2",
    "text": "number 2"
  },
  {
    "objectID": "about.html#reading",
    "href": "about.html#reading",
    "title": "About Me",
    "section": "reading…",
    "text": "reading…"
  },
  {
    "objectID": "about.html#live-music",
    "href": "about.html#live-music",
    "title": "About Me",
    "section": "live music…",
    "text": "live music…\n\nI also love making playlists, this is my latest:"
  },
  {
    "objectID": "about.html#movies",
    "href": "about.html#movies",
    "title": "About Me",
    "section": "movies…",
    "text": "movies…\n\nI love gore, romcoms, and classics but I always go back to The Truman Show, The Grand Budapest Hotel, and Pride and Prejudice 2005."
  },
  {
    "objectID": "posts/Volcano Storymap/index.html",
    "href": "posts/Volcano Storymap/index.html",
    "title": "Volcano StoryMap",
    "section": "",
    "text": "```{=html}\n\n\n\nView the StoryMap"
  },
  {
    "objectID": "posts/Cholera Storymap/index.html",
    "href": "posts/Cholera Storymap/index.html",
    "title": "Cholera StoryMap",
    "section": "",
    "text": "View the StoryMap"
  },
  {
    "objectID": "posts/Urban Heat Island Dashboard/index.html",
    "href": "posts/Urban Heat Island Dashboard/index.html",
    "title": "Richmond Urban Heat Island Effect Dashboard",
    "section": "",
    "text": "View the StoryMap"
  }
]